@model IEnumerable<WeddingRestaurant.Models.ChatMessage>
@{
    ViewData["Title"] = "Delete";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<link href="~/css/chat.css" rel="stylesheet">

<div class="chat-container">
    <div class="user-list">
        <div class="user-list-header">
            <h3>Users</h3>
        </div>
        <div class="users" id="users">
            <!-- User list will be displayed here -->
            @foreach (var u in Model)
            {
                <button class="user-item" id="@u.UserName" data-user-name="@u.UserName">
                    <div>@u.UserName</div>
                    @* <div>@u.Content</div> *@
                    @* <div>@u.Time</div> *@
                    @* <div>@u.SenderId</div> *@
                </button>
            }
        </div>      
    </div>
    <div class="chat-box">
        <div class="chat-header">
            <h2>Chat Room</h2>
        </div>
        <div class="chat-messages-empty" id="chat-messages-empty">
            <!-- Chat messages will be displayed here -->
        </div>
        <div class="chat-input">
            <input type="text" name="content" id="messageInput" placeholder="Type a message...">
            <input type="submit" id="sendButton" value="Send Message" style="background-color: #dc3545;" />
        </div>
    </div>
</div>


@section scripts {
            
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.7/signalr.min.js"></script>

    <script>
        $(document).ready(function () {
            $(document).on('click', '.user-item', function () {
                var userName = $(this).data('user-name');
                var chatBox = $('.chat-box');

                chatBox.removeClass().addClass(`chat-box chat-box-${userName}`);

                console.log("Clicked user:", userName);
                $.get(`/Admin/Chat/DetailMessage?userName=${userName}`, function (data) {
                    var chatMessageEmpty = $('#chat-messages-empty');

                    if (chatMessageEmpty.length) {
                        chatMessageEmpty.html(data)
                            .removeClass('chat-messages-empty')
                            .addClass('chat-messages')
                            .removeAttr('id')
                            .attr('id', 'chat-messages');
                    }
                    else {
                        $('#chat-messages').html(data)
                    } 
                    var chatMessage = $('#chat-messages');
                    chatMessage.animate({ scrollTop: chatMessage.prop("scrollHeight")}, 1);

                    var headerChatMessage = `
                            <div class="row">
                                    <div class="chat-about">
                                     <h2 class="m-b-0">${userName}</h2>
                                </div>
                            </div>`;

                    $('.chat-header').html(headerChatMessage);
                });
            });
        });

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        //từ user gửi qua admin - admin là người nhận
        connection.on("ReceiveMessage", (user, message) => {

            let chatBox = document.getElementById(`${user}`);
            let chatMessages = document.getElementById("chat-messages"); 
            const now = new Date();

            let dateTimeString = now.toLocaleDateString() + " " + now.toLocaleTimeString();

            if (!chatBox) {
                updateUserList(user);
            }
            var chatBoxUserName = document.getElementsByClassName(`chat-box-${user}`)
            console.log(chatBoxUserName)

            if (chatBoxUserName.length > 0) {
                const messageDiv = document.createElement("div");
                messageDiv.setAttribute('data-user-name', `${user}`);
                messageDiv.classList.add('message', 'received');

                const messageContent = document.createElement('p');
                messageContent.textContent = `${message}`;
                messageContent.setAttribute('title', dateTimeString);

                messageDiv.appendChild(messageContent);
                chatMessages.appendChild(messageDiv);
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }

        });

        //từ admin gửi đi
        document.getElementById("sendButton").addEventListener("click", function (event) {
            sendMessageHandler(event);
        });

        document.getElementById("messageInput").addEventListener("keypress", function (event) {
            if (event.key === "Enter") {
                sendMessageHandler(event);
            }
        });

        function sendMessageHandler(event) {
            event.preventDefault();
            var messageElement = document.querySelector('.message.received');

            var receiver = messageElement.getAttribute('data-user-name');
            var message = document.getElementById("messageInput").value;

            if (message === '') {
                this.disabled = false;
                return;
            }

            $.ajax({
                type: "POST",
                url: "/Chat/CreateMessage",
                data: {
                    content: message,
                    receiver: receiver
                },
                success: function (response) {
                    console.log("Message sent successfully.");
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log("Error sending message: " + xhr.responseText);
                }
            });

            sendMessage(receiver, message);
            document.getElementById("messageInput").value = '';
        }

        //từ admin gửi đi
        function sendMessage(receiver, message) {
            connection.invoke("SendMessageToUser", receiver, message).catch(function (err) {
                return console.error(err.toString());
            }); 
            const now = new Date();
            
            let dateTimeString = now.toLocaleDateString() + " " + now.toLocaleTimeString();

            let chatMessages = document.getElementById("chat-messages");

            const messageDiv = document.createElement("div");
            messageDiv.classList.add('message', 'sent');

            const messageContent = document.createElement('p');
            messageContent.textContent = `${message}`;
            messageContent.setAttribute('title', dateTimeString);
            messageDiv.appendChild(messageContent);
            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop += messageDiv.scrollHeight;
        }   

        function updateUserList(userName) {
            const userElement = document.createElement('button');
            userElement.classList.add('user-item');
            userElement.id = `${userName}`;
            userElement.setAttribute('data-user-name', `${userName}`);

            const userDiv = document.createElement('div');
            userDiv.textContent = userName
            userElement.appendChild(userDiv)
            document.getElementById('users').appendChild(userElement);
        } 
        connection.start().catch(err => console.error(err.toString()));

    </script>
}
